name: AWS Service CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - uses: actions/checkout@v3
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: "20"
      - name: Install Python dependencies and CDK
        run: |
          python -m pip install --upgrade pip
          pip install -r ${PWD}/requirements.txt
          npm install -g aws-cdk
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: "us-east-2"
      - name: Bootstrap CDK
        run: cdk bootstrap
      - name: Deploy to AWS
        run: cdk deploy --app="python3 ${PWD}/app.py" --require-approval=never

      - name: Get Lambda Function Name
        run: echo "::set-output name=FunctionName::$(aws cloudformation describe-stacks --region us-east-2 --query "Stacks[?StackName=='HelloWorldCdkAppStack'][].Outputs[?OutputKey=='FunctionName'].OutputValue" --output text)"
        id: get-fn-name

      - name: Print Function Name
        run: echo ${{ steps.get-fn-name.outputs.FunctionName }}

      - name: Update API for Lambda Integration
        run: |
          # sed -e 's,MY_LAMBDA_FUNCTION,'${{ steps.get-fn-name.outputs.FunctionName }}',g' < ${PWD}/api/hello-api.yaml
          sed 's/MY_LAMBDA_FUNCTION/${{ steps.get-fn-name.outputs.FunctionName }}/' ${PWD}/api/hello-api.yaml
          cat ${PWD}/api/hello-api.yaml

      - name: Deploy API to Sandbox
        uses: ibm-apiconnect/actions@main
        with:
          manager-host: api-manager.us-east-a.apiconnect.automation.ibm.com
          api-host: platform-api.us-east-a.apiconnect.automation.ibm.com
          provider-org: 'demo-advanced'
          catalog: 'sandbox'
          apikey: ${{ secrets.apikey }}
          product-file: '${PWD}/api/hello-product.yaml'
          migrate_subscriptions: 'true'